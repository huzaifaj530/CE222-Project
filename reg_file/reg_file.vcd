$date
	Sat May 13 17:22:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_tb $end
$var wire 32 ! out1 [31:0] $end
$var wire 32 " out2 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ r1 [4:0] $end
$var reg 5 % r2 [4:0] $end
$var reg 5 & rd [4:0] $end
$var reg 1 ' wr $end
$var reg 32 ( write_data [31:0] $end
$scope module uut $end
$var wire 1 ) clk $end
$var wire 5 * r1 [4:0] $end
$var wire 5 + r2 [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 1 - wr $end
$var wire 32 . write_data [31:0] $end
$var reg 32 / out1 [31:0] $end
$var reg 32 0 out2 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
0)
bx (
x'
bx &
bx %
bx $
0#
bx "
bx !
$end
#1000
1#
1)
#2000
0#
0)
0'
0-
#3000
1#
1)
#4000
0#
0)
b10 %
b10 +
b1 $
b1 *
#5000
1#
1)
#6000
0#
0)
b111 (
b111 .
b11 &
b11 ,
1'
1-
#7000
1#
1)
#8000
0#
0)
0'
0-
#9000
1#
1)
#10000
0#
0)
b11 $
b11 *
#11000
b111 /
b111 !
1#
1)
#12000
0#
0)
