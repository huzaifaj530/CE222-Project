$date
	Sun May 14 12:40:11 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PC_TB $end
$var wire 10 ! count [9:0] $end
$var reg 1 " branch $end
$var reg 1 # clk $end
$var reg 2 $ mem_to_reg [1:0] $end
$var reg 21 % offset [20:0] $end
$var reg 32 & reg_out1 [31:0] $end
$var reg 1 ' reset $end
$scope module uut $end
$var wire 1 ( branch $end
$var wire 1 ) clk $end
$var wire 2 * mem_to_reg [1:0] $end
$var wire 21 + offset [20:0] $end
$var wire 32 , reg_out1 [31:0] $end
$var wire 1 - reset $end
$var reg 10 . count [9:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
1-
bx ,
b0 +
bx *
0)
0(
1'
bx &
b0 %
bx $
0#
0"
bx !
$end
#1000
b0 .
b0 !
1#
1)
#2000
0#
0)
1"
1(
b11000 %
b11000 +
0'
0-
#3000
b11000 .
b11000 !
1#
1)
#4000
0#
0)
b100 &
b100 ,
b1100 %
b1100 +
b11 $
b11 *
#5000
b10000 .
b10000 !
1#
1)
#6000
0#
0)
#7000
1#
1)
#8000
0#
0)
#9000
1#
1)
#10000
0#
0)
#11000
1#
1)
